#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""Create data files
"""

import os
import sys
import argparse
import numpy as np
import pickle
import itertools
from collections import defaultdict
import utils
import re
from allennlp.commands.elmo import ElmoEmbedder   
import torch

def main(arguments):
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--dict_file', type=str, default = '', required=True)
    parser.add_argument('--out_file', type=str, default = 'elmo_emb.pkl', required=True)
    parser.add_argument('--gpu', type=int, default = 0, required=True)
    args = parser.parse_args(arguments)    
#    device = torch.device("cuda:" + str(args.gpu) if torch.cuda.is_available() else "cpu")    
    elmo = ElmoEmbedder(cuda_device = args.gpu)
    wv_matrix = []
    for line in open(args.dict_file, "r"):
        word, idx = line.split()
        tokens = [word]
        vectors = elmo.embed_sentence(tokens)
        wv_matrix.append(vectors[0][0])
        print(word, wv_matrix[-1].shape)
    wv_matrix = np.array(wv_matrix)
    print(wv_matrix.shape)
    pickle.dump(wv_matrix, open(args.out_file, 'wb'))
    print("Done!")

if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
